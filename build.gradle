
plugins {
    id 'java'
    id 'base'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'checkstyle'
    id 'pmd'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'java'
apply plugin: 'base'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'maven-publish'


def date = new Date()
def versionString= date.format("yyyy.MM.dd.HH.mm")
version="${versionString}"

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
   //reference to publishing.publications.MyPublication
    publications = ['MyPublication']
    pkg {
        repo = 'aws-build-tools'
        name = 'aws-build-tools'
        licenses = ['MIT']
        userOrg = 'orestis-unit'
        vcsUrl = 'https://github.com/BIBSYSDEV/aws-build-tools'

        version {
            name = "$versionString"
            desc = 'Alpha testing'
            released = new Date()
            vcsTag = "${versionString}"

        }
        
        
    }
}


//necessary for publishing
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

//necessary for publishing
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}





publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'no.bibsys.aws'
            artifactId 'aws-build-tools'
            version "${versionString}"
        }
    }
}



repositories {
    mavenCentral()

}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = "4.10.1"
}


dependencies {

    compile group: 'com.amazonaws', name: 'aws-java-sdk-acm', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-api-gateway', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-cloudformation', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-codebuild', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-codepipeline', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-iam', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-route53', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-secretsmanager', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-ssm', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.+'
    // For reading and deleting logs (application functionality)
    compile group: 'com.amazonaws', name: 'aws-java-sdk-logs', version: '1.11.+'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '+'

    //this should be the same version as the one used by amazon
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.6.0'

    // useful java libraries
    compile group: 'com.google.guava', name: 'guava', version: '27.0-jre'


    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.6'

    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.1.+'

    compile('io.symphonia:lambda-logging:1.0.3')

    //libraries for testing
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.23.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'


}




pmd {
    toolVersion = "6.7.0"
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/potential-future-pmd.xml')
    ruleSets = []
    ignoreFailures = false
}


checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/google_checks.xml').asFile()
    showViolations = true
    toolVersion '8.12'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}


shadowJar {
    archiveName = "${baseName}-fat.jar"
    exclude('org.apache.tomcat.embed:*')
}
task fatJar(dependsOn: shadowJar) {}


test {
    useJUnit {
        excludeCategories 'no.bibsys.aws.tools.IntegrationTest'
        excludeCategories 'no.bibsys.aws.tools.DoNotRunTest'
    }
}

task amazonTest(type: Test) {
    useJUnit {
        includeCategories 'no.bibsys.utils.IntegrationTest'
    }
}
